==57348== Memcheck, a memory error detector
==57348== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.
==57348== Using Valgrind-3.20.0 and LibVEX; rerun with -h for copyright info
==57348== Command: ./san-memory-uninit
==57348== Parent PID: 24939
==57348== 
==57348== Conditional jump or move depends on uninitialised value(s)
==57348==    at 0x11C50B: san_memory_uninit::main (san-memory-uninit.rs:12)
==57348==    by 0x11C65A: core::ops::function::FnOnce::call_once (function.rs:250)
==57348==    by 0x11C4DD: std::sys_common::backtrace::__rust_begin_short_backtrace (backtrace.rs:155)
==57348==    by 0x11C6D0: std::rt::lang_start::{{closure}} (rt.rs:159)
==57348==    by 0x132D1F: call_once<(), (dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (function.rs:284)
==57348==    by 0x132D1F: do_call<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panicking.rs:559)
==57348==    by 0x132D1F: try<i32, &(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (panicking.rs:523)
==57348==    by 0x132D1F: catch_unwind<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panic.rs:149)
==57348==    by 0x132D1F: {closure#2} (rt.rs:141)
==57348==    by 0x132D1F: do_call<std::rt::lang_start_internal::{closure_env#2}, isize> (panicking.rs:559)
==57348==    by 0x132D1F: try<isize, std::rt::lang_start_internal::{closure_env#2}> (panicking.rs:523)
==57348==    by 0x132D1F: catch_unwind<std::rt::lang_start_internal::{closure_env#2}, isize> (panic.rs:149)
==57348==    by 0x132D1F: std::rt::lang_start_internal (rt.rs:141)
==57348==    by 0x11C6A9: std::rt::lang_start (rt.rs:158)
==57348==    by 0x11C54D: main (in /tmp/san-memory-uninit)
==57348== 
==57348== 
==57348== HEAP SUMMARY:
==57348==     in use at exit: 0 bytes in 0 blocks
==57348==   total heap usage: 10 allocs, 10 frees, 3,184 bytes allocated
==57348== 
==57348== All heap blocks were freed -- no leaks are possible
==57348== 
==57348== Use --track-origins=yes to see where uninitialised values come from
==57348== For lists of detected and suppressed errors, rerun with: -s
==57348== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
